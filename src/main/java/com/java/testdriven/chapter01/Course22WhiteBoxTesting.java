package com.java.testdriven.chapter01;

/**
 * 	白盒测试
 *	
 *	白盒测试（也叫透明盒测试、玻璃盒测试和结构测试）查看受测软件的内部，并将由此获得的知识用于测试过程。
 *	例如，如果在特定条件下应引发异常，可能需要在测试中重现这种条件。
 *
 *	白盒测试要求测试人员了解系统的内部结构，同时具备编程技能；它提供了从内部观察受测软件的结果。
 *
 *	下面是白盒测试的一些优点：
  **	可高效找出错误和问题；
  **	知道受测软件的内部构造有助于进行详细测试；
  **	能够发现隐藏的错误；
  **	可帮助程序员反省；
  **	有助于优化代码；
  **	由于知道软件的内部构造，因此可最大限度地提高测试覆盖率。

 *	下面是白盒测试的一些缺点：
  **	可能无法发现未实现或缺失的功能；
  **	需要对受测软件的内部构造有大致认识；
  **	需要访问代码；
  **	测试通常与产品代码的实现细节紧密耦合，导致重构代码后原本应该通过的测试未能通过。
 *	
 *	白盒测试几乎都是自动化测试，且在大多数情况下都是单元测试。
 *	在实现前执行的白盒测试是以TDD方式编写的。
 *	
 *	@author hzweiyongqiang
 */
public class Course22WhiteBoxTesting {

}
