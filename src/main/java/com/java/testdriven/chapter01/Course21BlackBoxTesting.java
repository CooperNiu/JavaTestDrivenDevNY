package com.java.testdriven.chapter01;

/**
 * 	黑盒测试
 *	
 *	黑盒测试（也叫功能测试）将受测软件视为一个黑盒，无需知道其内部构造。
 *	这种测试是通过软件界面进行的，旨在确认它们像预期的那样工作。
 *	只要界面的功能未变，测试就应通过————即便内部构造发生了变化。
 *	测试人员知道程序该做什么，但不知道它是如何做的。
 *
 *	下面是黑盒测试的一些优点：
  **	可高效测试大块代码段；
  **	无需访问和理解代码，也不要求测试人员知道如何编写代码；
  **	将用户角度和开发人员角度分离。

 *	下面是黑盒测试的一些缺点：
  **	覆盖率有限，因为只执行部分测试场景；
  **	测试效率低下，因为测试人员对软件内部构造一无所知；
  **	测试缺乏针对性，因为测试人员对应用程序的了解有限。
 *	
 *	用于驱动开发的测试通常是根据验收标准进行的，而验收标准决定了要开发哪些功能。
 *	自动化黑盒测试依赖于某种形式的自动化，如 行为驱动开发（BDD）。
 *
 *	@author hzweiyongqiang
 */
public class Course21BlackBoxTesting {

}
