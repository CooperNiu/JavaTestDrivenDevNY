package com.java.testdriven.chapter01;

/**
 * 	模拟
 *	
 *	要让测试能够快速运行并不断提供反馈，必须以合适的方式组织代码，以便能够轻松使用模拟对象（mock）和存根（stub）替换方法、函数和类。
 *	这种替换实际代码的方式通常称为“测试替身”。
 *	外部依赖可能严重影响执行速度，例如，代码可能需要与数据库通信。通过模拟外部依赖，可大幅提高速度。
 *
 *	整个单元测试集的执行时间应以分钟乃至秒计。要想轻松使用模拟对象和存根，必须分离关注点以优化代码结构。
 *
 *	除可提高速度外，消除外部依赖还有其他更重要的好处。
 *	代码的外部依赖可能包括数据库、Web服务器、外部API等，这些外部依赖不但不可靠，而且访问需要很长时间。
 *	在很多情况下，这些外部依赖还可能不是现成的，例如，你可能需要编写与数据库通信的代码，并让人创建数据库模式（schema）。
 *	如果不使用模拟对象，就只能等到模式就绪后再测试。
 *
 *	@author hzweiyongqiang
 */
public class Course3Mocking {

}
